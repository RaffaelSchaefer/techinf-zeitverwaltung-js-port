generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Position {
  id    Int    @id @default(autoincrement())
  name  String @unique
  Users User[]
}

model User {
  id         Int       @id @default(autoincrement())
  first_name String
  last_name  String
  positionId Int
  Position   Position  @relation(references: [id], fields: [positionId])
  Status     Status?
  Addresses  Address[]
  Logs       Log[]
  Cards      Card[]
}

model Status {
  userID Int     @id @unique
  status Boolean @default(false)
  user   User    @relation(fields: [userID], references: [id], onDelete: Cascade)
  Log    Log[]
}

model Card {
  uid    String @id
  Log    Log[]
  User   User?  @relation(fields: [userId], references: [id])
  userId Int?
}

model Address {
  street_name  String
  house_number String
  town_name    String
  postal_code  String
  country      String
  user         User   @relation(fields: [userId], references: [id])
  userId       Int

  @@id([street_name, house_number, town_name, postal_code, country, userId])
}

model Log {
  time         DateTime @default(now())
  card         Card     @relation(fields: [cardUid], references: [uid])
  status       Status   @relation(fields: [statusUserID], references: [userID])
  user         User     @relation(fields: [userId], references: [id])
  cardUid      String
  statusUserID Int
  userId       Int

  @@id([time, cardUid])
}
